name: 'Build macOS GTK4'
description: 'Builds macOS GTK4 for obs-deps with specified architecture and build config'
inputs:
  target:
    description: 'Build target for GTK4'
    required: true
  config:
    description: 'Build configuration'
    required: false
    default: 'Release'
  cacheRevision:
    description: 'Cache revision number to force creation of new cache generation'
    required: false
    default: '01'
runs:
  using: 'composite'
  steps:
    - name: Environment Setup
      id: gtk4-env-setup
      shell: zsh {0}
      run: |
        if (( ! ${+commands[sha256sum]} )) brew install coreutils
        rehash
        /usr/bin/xcrun --sdk macosx -show-sdk-version &> /dev/null

        gtk4_dep_hash=$(cat ${{ github.workspace }}/deps.gtk4/*.zsh | sha256sum | cut -d " " -f 1)

        print "::set-output name=depHash::${gtk4_dep_hash}"

    - name: Restore macOS GTK4 from Cache
      id: deps-cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/*_build_temp/*
          !${{ github.workspace }}/*_build_temp/**/.git
          !${{ github.workspace }}/*_build_temp/*.tar.gz
          !${{ github.workspace }}/*_build_temp/*.tar.xz
          !${{ github.workspace }}/*_build_temp/*.zip
        key: ${{ inputs.target }}-macos-gtk4-${{ steps.gtk4-env-setup.outputs.depHash }}-${{ inputs.cacheRevision }}
        restore-keys: ${{ inputs.target }}-macos-gtk4-${{ steps.gtk4-env-setup.outputs.depHash }}-${{ inputs.cacheRevision }}-

    - name: Install macOS GTK4
      if: ${{ steps.deps-cache.outputs.cache-hit == 'true' }}
      shell: zsh {0}
      run: ./build-gtk4.zsh --skip-build --skip-unpack --target ${{ inputs.target }} --config ${{ inputs.config }} --shared

    - name: Build and Install macOS GTK4
      if: ${{ steps.deps-cache.outputs.cache-hit != 'true' }}
      shell: zsh {0}
      run: ./build-gtk4.zsh --target ${{ inputs.target }} --config ${{ inputs.config }} --shared
