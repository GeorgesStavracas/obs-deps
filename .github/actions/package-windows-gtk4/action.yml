name: 'Package Windows GTK4'
description: 'Packages Windows GTK4 for obs-deps with specified architecture'
inputs:
  base:
    description: 'Base name of the Windows artifacts to download'
    required: true
  outputName:
    description: 'Name pattern for created Windows artifacts'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Download Windows RelWithDebInfo artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.base }}-RelWithDebInfo-${{ github.sha }}

    - name: Get File Names
      id: GetFileNames
      shell: pwsh
      run: |
        $FileName = (Get-ChildItem -Filter "windows-deps-gtk4-*.zip").Name.Replace("-RelWithDebInfo", "")
        $PDBArchiveFileName = (Get-ChildItem -Filter "windows-deps-gtk4-*.zip").Name.Replace("RelWithDebInfo", "ReleasePDBs")
        $PDBOutputName = "${{ inputs.outputName }}".Replace("${{ inputs.base }}", "${{ inputs.base }}-ReleasePDBs")
        Write-Output "::set-output name=fileName::${FileName}"
        Write-Output "::set-output name=pdbFileName::${PDBArchiveFileName}"
        Write-Output "::set-output name=pdbOutputName::${PDBOutputName}"

    - name: Extract RelWithDebInfo
      shell: pwsh
      run: |
        7z x 'windows-deps-gtk4-*.zip' -ogtk4_rel
        Remove-Item "*.zip"

    - name: Separate RelWithDebInfo PDBs
      shell: pwsh
      run: |
        New-Item -ItemType "directory" rel_pdbs
        Set-Location "gtk4_rel"
        $Gtk4InstallDir = (Get-Location | Convert-Path)
        Set-Location "..\rel_pdbs"
        $ReleasePdbInstallDir = (Get-Location | Convert-Path)
        Set-Location ".."
        $ReleasePdbFiles = Get-ChildItem -Filter "*.pdb" -File -Recurse
        $DestinationDirRelativePaths = ( $ReleasePdbFiles | ForEach-Object { $_.DirectoryName } | Sort-Object -Unique ).Replace("${Gtk4InstallDir}\", "")
        $DestinationDirRelativePaths | ForEach-Object { New-Item -Name "$_" -Path "${ReleasePdbInstallDir}" -ItemType "directory" -Force }
        $ReleasePdbFiles | ForEach-Object { Move-Item $_.FullName $_.FullName.Replace("${Gtk4InstallDir}", "${ReleasePdbInstallDir}") }

    - name: Download Windows Debug artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.base }}-Debug-${{ github.sha }}

    - name: Extract Debug
      shell: pwsh
      run: |
        7z x 'windows-deps-gtk4-*.zip' -ogtk4
        Remove-Item "*.zip"

    - name: Copy RelWithDebInfo over Debug
      shell: pwsh
      run: |
        Copy-Item "gtk4_rel\*" "gtk4\" -Recurse -Force

    - name: Create combined GTK4 archive
      shell: pwsh
      run: |
        $FileName = "${{ steps.GetFileNames.outputs.fileName }}"
        7z a "$FileName" .\gtk4\* -mx=9

    - name: Create Release PDBs archive
      shell: pwsh
      run: |
        $FileName = "${{ steps.GetFileNames.outputs.pdbFileName }}"
        7z a "$FileName" .\rel_pdbs\* -mx=9

    - name: Publish Combined GTK4 Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.outputName }}
        path: ${{ github.workspace }}/${{ steps.GetFileNames.outputs.fileName }}

    - name: Publish Release PDBs Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.GetFileNames.outputs.pdbOutputName }}
        path: ${{ github.workspace }}/${{ steps.GetFileNames.outputs.pdbFileName }}
